{
	"info": {
		"name": "API tests",
		"_postman_id": "b32ab429-a1b8-2c68-deba-c2fe70d71d7c",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test GET movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "13debc72-7636-4c0e-a886-14f65c6c9c80",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body has string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"When Tony Stark tries to jumpstart a dormant peacekeeping program, things go awry and Earths Mightiest Heroes are put to the ultimate test as the fate of the planet hangs in the balance. As the villainous Ultron emerges, it is up to The Avengers to stop him from enacting his terrible plans, and soon uneasy alliances and unexpected action pave the way for an epic and unique global adventure.\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"testing_name\"] = jsonData.num_results === 9;",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test certain movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c78c257c-9d41-4428-9407-0c19acb072e3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body contains string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Against his father Odin's will, The Mighty Thor - a powerful but arrogant warrior god - recklessly reignites an ancient war. Thor is cast down to Earth and forced to live among humans as punishment. Once here, Thor learns what it takes to be a true hero when the most dangerous villain of his world sends the darkest forces of Asgard to invade Earth.\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"testing_name\"] = jsonData.movie_name === \"Thor\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/10195",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"10195"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "check for invalid input to GET movie by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bd6c14e-c48e-4780-9868-37bd2b3250f8",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/10190",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"10190"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test similar books for given movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2d1c7162-c7a7-4977-b165-b1871de88e25",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"testing first book name\"] = jsonData.objects[0].book_name === \"Deep End\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"testing second book author\"] = jsonData.objects[1].authors[0] === \"Christopher Paolini\";",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/122917/similar_books",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"122917",
						"similar_books"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test similar songs for given movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da5e3b43-c64b-45dc-bbc8-0deeeb40d84e",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"testing first song name\"] = jsonData.objects[0].song_name === \"Drive My Car - Remastered\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/321612/similar_songs",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"321612",
						"similar_songs"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test songs on a page",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e87976d8-9b28-4672-a24b-72bdf192acb9",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].artists[0] === \"Cameron Esposito\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].song_id === \"5EGf9u54O7mq59CnsTAqoV\";",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs?page=2",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test song",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2bcc4be-ef67-4f40-9ef6-56ade27c4213",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.album === \"Rubber Soul (Remastered)\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs/06ypiqmILMdVeaiErMFA91",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs",
						"06ypiqmILMdVeaiErMFA91"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test song's similar movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec8402ea-c803-4d25-b1a3-05e46eff82e4",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[1].movie_name === \"Coco\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs/06ypiqmILMdVeaiErMFA91/similar_movies",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs",
						"06ypiqmILMdVeaiErMFA91",
						"similar_movies"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test for invalid book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a9e734e-67ea-4deb-a87f-326f78099101",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Body has string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"404 Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/qWG9qdUsFrMD",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"qWG9qdUsFrMD"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test song's similar movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a617cdcd-3593-4970-81ca-9f720e8eb27d",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].movie_name === \"Birdman\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].release_date === \"2014-08-27\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs/1hZJ6UYzTzKSIPEkOoKCDI/similar_movies",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs",
						"1hZJ6UYzTzKSIPEkOoKCDI",
						"similar_movies"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4eebe456-a80b-4352-91b0-94462c76f4fc",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].authors[0] === \"Lily Xiao Hong Lee\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[1].book_name === \"A Common Stage\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books?page=1",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test a given book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90673699-dcf4-4118-8e55-2c6fcf877f2f",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.authors[1] === \"Luciano Vecchio\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.book_id === \"qWG9qdUsFrMC\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 3\"] = jsonData.description === \"The Penguin hijacks a luxury yacht with his penguin-shaped submarine and it is up to Batman to stop him and rescue the passengers and crew.\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/qWG9qdUsFrMC",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"qWG9qdUsFrMC"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "get book's similar movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06bc57f6-d469-44df-bd47-c971822837dc",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].director === \"Zack Snyder\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].similar_books[0] === \"ktjKYsmHUGUC\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/qWG9qdUsFrMC/similar_movies",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"qWG9qdUsFrMC",
						"similar_movies"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "get book's similar songs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6983f614-1bb3-484b-bfb6-178166ed9d97",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].album === \"Mr. Wonderful\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].artists[0] === \"Action Bronson\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/qWG9qdUsFrMC/similar_songs",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"qWG9qdUsFrMC",
						"similar_songs"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test songs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa7fc2f9-17ed-4c9d-8e2e-3d19c2aa2456",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"song_id\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs"
					]
				},
				"description": "Ensure API responds with OK (200)"
			},
			"response": []
		},
		{
			"name": "test movies on a page",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eec4bcd3-e92b-4542-b1e1-3cc5833f4e03",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"\\\"page\\\": 2\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies?page=2",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"equals": true
						}
					]
				},
				"description": "Ensure API responds with OK (200)"
			},
			"response": []
		},
		{
			"name": "test invalid ID for a movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1246ba76-d950-438b-b443-03c874da36c2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Body contains 'Not Found'\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/-8444",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"-8444"
					]
				},
				"description": "Attempts to search for an impossible primary key value, should return a 404: Not Found error"
			},
			"response": []
		},
		{
			"name": "test books on a page",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86581505-da85-49d4-abfc-1c896ea72b96",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"\\\"page\\\": 2\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books?page=2",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"equals": true
						}
					]
				},
				"description": "Ensure API responds with OK (200)"
			},
			"response": []
		},
		{
			"name": "test songs on a page",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6deaf766-104e-483a-81da-5327f2e799c6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"\\\"page\\\": 2\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs?page=2",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"equals": true
						}
					]
				},
				"description": "Ensure API responds with OK (200)"
			},
			"response": []
		},
		{
			"name": "test books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "73079438-96d9-425a-a454-e27a4e111590",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Response is OK\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"book_id\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books"
					]
				},
				"description": "Ensure API responds with OK (200)"
			},
			"response": []
		},
		{
			"name": "test for invalid attribute for given media type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ab008bea-2b49-492c-ba72-bec7f1d10721",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/qWG9qdUsFrMC/movie_name",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"qWG9qdUsFrMC",
						"movie_name"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test for invalid page number",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e351d97-7c13-4dde-9e1b-c2eaccc6341b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/qWG9qdUsFrMC?page=0",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"qWG9qdUsFrMC"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort movies by title alphabetical order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b1a3f04-076d-4097-be96-a0feb91f1a10",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"testing cast\"] = jsonData.objects[0].cast[4] === \"Octavia Spencer\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"testing director\"] = jsonData.objects[1].director === \"Bryan Singer\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"testing movie name\"] = jsonData.objects[8].movie_name === \"There Be Dragons\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies?sort=title_desc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies"
					],
					"query": [
						{
							"key": "sort",
							"value": "title_desc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort similar books for this movie by author descending order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c900cff7-72d6-4a19-a848-17ef28f81670",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"testing authors\"] = jsonData.objects[0].authors[0] === \"Sam Hutton\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"testing book name\"] = jsonData.objects[1].book_name === \"Eragon\";",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/122917/similar_books?sort=author_desc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"122917",
						"similar_books"
					],
					"query": [
						{
							"key": "sort",
							"value": "author_desc\n",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort similar songs for movie by artist desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "22e2ec74-20d3-445b-bd80-08ebda91c2c5",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].artists[0] === \"J.R.R. Tolkien\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].album === \"Voices of Yesteryear, Vol. 2\";",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/118340/similar_songs?sort=artist_desc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"118340",
						"similar_songs"
					],
					"query": [
						{
							"key": "sort",
							"value": "artist_desc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test filter for movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "196fb442-ae28-44a6-8f7d-8ee2c03acb72",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.cast[1] === \"Natalie Portman\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.director === \"Kenneth Branagh\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 3\"] = jsonData.topics[0] === \"dc1d2a4d591857f0a0dd\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/10195?filter=movie_name&q=avengers",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"10195"
					],
					"query": [
						{
							"key": "filter",
							"value": "movie_name",
							"equals": true
						},
						{
							"key": "q",
							"value": "avengers",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test filter for similar books for given movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4fe90326-614f-4f76-9164-8c1685613935",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.num_results === 0;",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/movies/181808/similar_books?filter=release_date&q=2015",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"movies",
						"181808",
						"similar_books"
					],
					"query": [
						{
							"key": "filter",
							"value": "release_date",
							"equals": true
						},
						{
							"key": "q",
							"value": "2015",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test filter for songs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04b742e2-ed26-42a3-8b58-1283a7c5ebd3",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].album === \"XSCAPE\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].similar_movies[1] === \"76341\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 3\"] = jsonData.objects[0].song_name === \"Love Never Felt so Good\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs?filter=song_name&q=love",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs"
					],
					"query": [
						{
							"key": "filter",
							"value": "song_name",
							"equals": true
						},
						{
							"key": "q",
							"value": "love",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test sort for songs by release year ascending",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "327aad93-4951-4892-bbab-d9ed8ce0ad07",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].album === \"Rubber Soul (Remastered)\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].artists[0] === \"The Beatles\";",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs?sort=release_year_asc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs"
					],
					"query": [
						{
							"key": "sort",
							"value": "release_year_asc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort similar movies for a song by release year asc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77ea29f5-2bf2-48bc-bf84-a213e84cb6cd",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].cast[0] === \"Emma Watson\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].director === \"Bill Condon\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 3\"] = jsonData.objects[1].movie_name === \"Coco\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/songs/06ypiqmILMdVeaiErMFA91/similar_movies?sort=release_year_asc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"songs",
						"06ypiqmILMdVeaiErMFA91",
						"similar_movies"
					],
					"query": [
						{
							"key": "sort",
							"value": "release_year_asc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort books by title descending",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e64a1a94-f1fb-48fe-8340-f5551e2f52cb",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].book_name === \"You Choose 2: Mayhem at Magic School\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[1].similar_songs[1] === \"6NpX6GmiJWAC1wJyLlPLzC\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books?sort=title_desc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "sort",
							"value": "title_desc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test filter for books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46f7ecb3-b74a-40c6-9545-4935c13a31be",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].book_name === \"The Apocalypse Door\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[1].authors[0] === \"James Roy\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books?filter=authors&q=James",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "filter",
							"value": "authors",
							"equals": true
						},
						{
							"key": "q",
							"value": "James",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort similar songs for a given book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3babe1-c515-4816-9050-2d6fcd76248f",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].artists[0] === \"Aziz Ansari\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[1].song_name === \"The first few jokes - Live\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/FlI6qWDYd0UC/similar_songs?sort=release_year_asc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"FlI6qWDYd0UC",
						"similar_songs"
					],
					"query": [
						{
							"key": "sort",
							"value": "release_year_asc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test filter for similar songs for a book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "286eb041-ca5f-4bc5-85d8-d1f283fb5167",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].song_id === \"3X73JXN4ncXysXrh0u5tHN\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].youtube_url === \"hkUZlaWQkmY\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/FlI6qWDYd0UC/similar_songs?filter=album&q=moments",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"FlI6qWDYd0UC",
						"similar_songs"
					],
					"query": [
						{
							"key": "filter",
							"value": "album",
							"equals": true
						},
						{
							"key": "q",
							"value": "moments",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "sort similar movies to a book by title desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a25c8dbb-b8e4-4d20-997c-76bb6be037c2",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"tests[\"test 1\"] = jsonData.objects[0].cast[0] === \"Ginnifer Goodwin\";",
							"",
							"var jsonData = pm.response.json();",
							"tests[\"test 2\"] = jsonData.objects[0].movie_name === \"Zootopia\";",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.poptopic.org/books/FlI6qWDYd0UC/similar_movies?sort=title_desc",
					"host": [
						"api",
						"poptopic",
						"org"
					],
					"path": [
						"books",
						"FlI6qWDYd0UC",
						"similar_movies"
					],
					"query": [
						{
							"key": "sort",
							"value": "title_desc",
							"equals": true
						}
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}